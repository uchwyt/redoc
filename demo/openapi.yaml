openapi: 3.0.1
info:
  title: Mimeeq API
  description: The Mimeeq API allows developers to access information from Mimeeq. You can use this API to build private services or public applications based on Mimeeq Configurator. To learn how to get your credentials, read our [Authorization Guide](/authorization-guide). All endpoints are available via `https` and require API KEY authorization.
  contact:
    email: support@mimeeq.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about Mimeeq Configurator
  url: https://docs.mimeeq.com
servers:
  - url: https://mimeeqapi.com
    description: Production server
tags:
  - name: Product
    description: Product API methods
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-KEY
  schemas:
    MimeeqPriceLevel:
      description: ''
      type: object
      properties:
        quantityMin:
          description: ''
          oneOf:
            - type: number
            - type: string
        quantityMax:
          description: ''
          oneOf:
            - type: number
            - type: string
        price:
          description: ''
          type: number
        pricePart:
          description: ''
          type: number
        discount:
          type: number
    MimeeqOptionComponent:
      description: ''
      type: object
      properties:
        optionName:
          description: Name of option
          type: string
        image:
          description: URL to option image (optional)
          type: string
    MimeeqPriceComponent:
      description: ''
      type: object
      properties:
        unitPrice:
          description: Price for one unit
          type: number
        totalPrice:
          description: Total price for selected quantity
          type: number
        quantity:
          description: ''
          type: number
        shortCode:
          description: Configuration short code
          type: string
    ProductPriceResponse:
      description: ''
      type: object
      required:
        - price
        - currency
      properties:
        price:
          description: Total price
          type: number
        oneTimePrice:
          description: One time extra amount. Not available for Modular products
          type: number
        levels:
          description: Quantity breaks levels. Not available for Modular products
          type: array
          items:
            $ref: '#/components/schemas/MimeeqPriceLevel'
        currency:
          description: Currency symbol
          type: string
        deliveryTime:
          description: Delivery time for selected configuration
          type: number
        components:
          description: Price of modular product components
          type: array
          items:
            $ref: '#/components/schemas/MimeeqPriceComponent'
        vatType:
          description: ''
          type: string
          enum:
            - VAT_INCL
            - VAT_EXCL
    ProductInfoConfiguration:
      description: Array of selected options names grouped by block
      type: array
      items:
        $ref: '#/components/schemas/ProductInfoConfigurationItem'
    ProductInfoConfigurationItem:
      description: ''
      type: object
      properties:
        blockId:
          description: Id of options block
          type: string
        blockName:
          description: Name of options block
          type: string
        options:
          description: Names of options selected for current block
          type: array
          items:
            type: string
        optionsData:
          description: Data of options selected for current block
          type: array
          items:
            $ref: '#/components/schemas/MimeeqOptionComponent'
    ProductInfoComponentItem:
      description: ''
      allOf:
        - $ref: '#/components/schemas/MimeeqProductInfo'
        - type: object
          required:
            - quantity
            - productId
          properties:
            quantity:
              description: ''
              type: number
            shortCode:
              description: Configuration short code
              type: string
    MimeeqProduct:
      type: object
      required:
        - name
        - code
        - defaultImage
        - description
      properties:
        name:
          description: ''
          type: string
        code:
          description: ''
          type: string
        description:
          description: ''
          type: string
        configuration:
          $ref: '#/components/schemas/ProductInfoConfiguration'
        defaultImage:
          description: ''
          type: string
        SKU:
          description: Not available for Modular product
          type: string
    MimeeqProductInfo:
      allOf:
        - $ref: '#/components/schemas/MimeeqProduct'
        - type: object
          properties:
            configuration:
              $ref: '#/components/schemas/ProductInfoConfiguration'
    ProductInfoResponse:
      description: ''
      allOf:
        - $ref: '#/components/schemas/MimeeqProductInfo'
        - type: object
          required:
            - status
            - mode
          properties:
            status:
              description: ''
              type: string
              enum:
                - ACTIVE
                - INACTIVE
            mode:
              description: ''
              type: string
              enum:
                - MODULAR
                - VARIANT
                - STANDARD
            deliveryInfo:
              description: Information about when product can be delivered
              type: string
            components:
              description: ''
              type: array
              items:
                $ref: '#/components/schemas/ProductInfoComponentItem'
    ProductGeneralInfo:
      type: object
      required:
        - productId
        - variantCode
        - name
        - displayName
        - status
        - visibility
        - privacy
        - type
        - mode
        - createdAt
        - isOwn
      properties:
        productId:
          description: Unique product identifier
          type: string
          example: PROD-e6e35a89-159c-413e-98b6-8260367c554a
        variantCode:
          description: Unique variant code
          type: string
          example: CODE-1
        name:
          description: Translated product name
          type: object
          additionalProperties:
            type: string
          example:
            en: English text
            de: Deutscher Text
        displayName:
          description: Translated product display name
          type: object
          additionalProperties:
            type: string
          example:
            en: English text
            de: Deutscher Text
        status:
          description: Product status
          type: string
          enum:
            - ACTIVE
            - INACTIVE
          example: ACTIVE
        mode:
          description: Product mode
          type: string
          enum:
            - MODULAR
            - VARIANT
            - STANDARD
          example: VARIANT
        type:
          description: Product type
          type: string
          enum:
            - 2D
            - 3D
          example: 3D
        visibility:
          description: Product visibility
          type: boolean
          example: true
        privacy:
          description: Product privacy setting
          type: string
          enum:
            - PUBLIC
            - PRIVATE
            - RESTRICTED_TO
          example: PUBLIC
        defaultConfigurationCode:
          description: Product default configuration code
          type: string
          example: Fabric-a7&Colour-a1
        manufacturer:
          description: Product manufacturer details
          type: string
          example: AB furniture
        designer:
          description: Product designer details
          type: string
          example: John Doe
        collection:
          description: Product collection details
          type: string
          example: Office
        previewImage:
          description: Product preview image URL
          type: string
          example: https://fsdfsfe3231.cloudfront.net/c_aer/3963efc7-e1b5-4a03-ab51-4e68efa5afdb.png
        isOwn:
          description: Flag indicating whether product is owned by the customer or is shared by another subject
          type: boolean
          example: true
        createdAt:
          description: Product creation date
          type: string
          format: date-time
          example: '2022-04-19T00:41:33.721Z'
        modifiedAt:
          description: Product last modification date
          type: string
          format: date-time
          example: '2022-04-22T21:18:25.321Z'
        embedShortCode:
          description: Embed short code for the product variant
          type: string
          example: 77NOCJ
security:
  - ApiKeyAuth: [ ]
paths:
  /get-product-price-info:
    get:
      tags:
        - Product
      summary: Get product price by short code
      description: Returns the product price by short code and quantity. Please note that price list overrides default API price, company id overrides prices ids. They cannot be used simultaneously, if you require to use all please use separate calls.
      operationId: getProductPriceInfo
      parameters:
        - name: shortCode
          in: query
          description: Short code generated for selected configuration
          required: true
          schema:
            type: string
        - name: quantity
          in: query
          description: Quantity
          required: true
          schema:
            type: number
        - name: lang
          in: query
          description: Custom language code. If not provided it will use default Customer language
          schema:
            type: string
        - name: priceListIds
          in: query
          description: Custom price list ids. Provide these in case you want get price from specific price list(s)
          schema:
            type: array
            items:
              type: string
        - name: companyId
          in: query
          description: Custom company Id. Provide it in case you want to get price for specific company
          schema:
            type: string
        - name: priceType
          in: query
          description: Custom price type. Required if you want get price for specific company or from specific price list(s)
          schema:
            type: string
            enum:
              - RRP
              - SALE
              - COST
        - name: vatType
          in: query
          description: Custom VAT type. If not provided it will use default value from Customer's public price list
          schema:
            type: string
            enum:
              - INCL_VAT
              - EXCL_VAT
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductPriceResponse'
        '403':
          description: Authentication failed.
          content: { }
        '500':
          description: Internal server error.
          content: { }
      x-codeSamples:
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://mimeeqapi.com/get-product-price-info?shortCode=SOME_STRING_VALUE&quantity=SOME_NUMBER_VALUE&lang=SOME_STRING_VALUE&priceListIds=SOME_ARRAY_VALUE&companyId=SOME_STRING_VALUE&priceType=SOME_STRING_VALUE&vatType=SOME_STRING_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "X-API-KEY: REPLACE_KEY_VALUE");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://mimeeqapi.com/get-product-price-info?shortCode=SOME_STRING_VALUE&quantity=SOME_NUMBER_VALUE&lang=SOME_STRING_VALUE&priceListIds=SOME_ARRAY_VALUE&companyId=SOME_STRING_VALUE&priceType=SOME_STRING_VALUE&vatType=SOME_STRING_VALUE");
            var request = new RestRequest(Method.GET);
            request.AddHeader("X-API-KEY", "REPLACE_KEY_VALUE");
            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://mimeeqapi.com/get-product-price-info?shortCode=SOME_STRING_VALUE&quantity=SOME_NUMBER_VALUE&lang=SOME_STRING_VALUE&priceListIds=SOME_ARRAY_VALUE&companyId=SOME_STRING_VALUE&priceType=SOME_STRING_VALUE&vatType=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"X-API-KEY\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: |-
            HttpResponse<String> response = Unirest.get("https://mimeeqapi.com/get-product-price-info?shortCode=SOME_STRING_VALUE&quantity=SOME_NUMBER_VALUE&lang=SOME_STRING_VALUE&priceListIds=SOME_ARRAY_VALUE&companyId=SOME_STRING_VALUE&priceType=SOME_STRING_VALUE&vatType=SOME_STRING_VALUE")
              .header("X-API-KEY", "REPLACE_KEY_VALUE")
              .asString();
        - lang: JS
          source: |-
            const data = null;

            const xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://mimeeqapi.com/get-product-price-info?shortCode=SOME_STRING_VALUE&quantity=SOME_NUMBER_VALUE&lang=SOME_STRING_VALUE&priceListIds=SOME_ARRAY_VALUE&companyId=SOME_STRING_VALUE&priceType=SOME_STRING_VALUE&vatType=SOME_STRING_VALUE");
            xhr.setRequestHeader("X-API-KEY", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "mimeeqapi.com",
              "port": null,
              "path": "/get-product-price-info?shortCode=SOME_STRING_VALUE&quantity=SOME_NUMBER_VALUE&lang=SOME_STRING_VALUE&priceListIds=SOME_ARRAY_VALUE&companyId=SOME_STRING_VALUE&priceType=SOME_STRING_VALUE&vatType=SOME_STRING_VALUE",
              "headers": {
                "X-API-KEY": "REPLACE_KEY_VALUE"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Php
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, [
              CURLOPT_URL => "https://mimeeqapi.com/get-product-price-info?shortCode=SOME_STRING_VALUE&quantity=SOME_NUMBER_VALUE&lang=SOME_STRING_VALUE&priceListIds=SOME_ARRAY_VALUE&companyId=SOME_STRING_VALUE&priceType=SOME_STRING_VALUE&vatType=SOME_STRING_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => [
                "X-API-KEY: REPLACE_KEY_VALUE"
              ],
            ]);

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("mimeeqapi.com")

            headers = { 'X-API-KEY': "REPLACE_KEY_VALUE" }

            conn.request("GET", "/get-product-price-info?shortCode=SOME_STRING_VALUE&quantity=SOME_NUMBER_VALUE&lang=SOME_STRING_VALUE&priceListIds=SOME_ARRAY_VALUE&companyId=SOME_STRING_VALUE&priceType=SOME_STRING_VALUE&vatType=SOME_STRING_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Ruby
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://mimeeqapi.com/get-product-price-info?shortCode=SOME_STRING_VALUE&quantity=SOME_NUMBER_VALUE&lang=SOME_STRING_VALUE&priceListIds=SOME_ARRAY_VALUE&companyId=SOME_STRING_VALUE&priceType=SOME_STRING_VALUE&vatType=SOME_STRING_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["X-API-KEY"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Curl
          source: |-
            curl --request GET \
              --url 'https://mimeeqapi.com/get-product-price-info?shortCode=SOME_STRING_VALUE&quantity=SOME_NUMBER_VALUE&lang=SOME_STRING_VALUE&priceListIds=SOME_ARRAY_VALUE&companyId=SOME_STRING_VALUE&priceType=SOME_STRING_VALUE&vatType=SOME_STRING_VALUE' \
              --header 'X-API-KEY: REPLACE_KEY_VALUE'
  /get-product-info:
    get:
      tags:
        - Product
      summary: Find product info by short code
      description: Get product info by short code.
      operationId: getProductInfo
      parameters:
        - name: shortCode
          in: query
          description: Short code generated for selected configuration
          required: true
          schema:
            type: string
        - name: quantity
          in: query
          description: Quantity
          required: true
          schema:
            type: number
        - name: lang
          in: query
          description: Custom language code. If not provided it will use default Customer language
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductInfoResponse'
        '403':
          description: Authentication failed.
          content: { }
        '500':
          description: Internal server error.
          content: { }
      x-codeSamples:
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://mimeeqapi.com/get-product-info?shortCode=SOME_STRING_VALUE&quantity=SOME_NUMBER_VALUE&lang=SOME_STRING_VALUE");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "X-API-KEY: REPLACE_KEY_VALUE");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://mimeeqapi.com/get-product-info?shortCode=SOME_STRING_VALUE&quantity=SOME_NUMBER_VALUE&lang=SOME_STRING_VALUE");
            var request = new RestRequest(Method.GET);
            request.AddHeader("X-API-KEY", "REPLACE_KEY_VALUE");
            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://mimeeqapi.com/get-product-info?shortCode=SOME_STRING_VALUE&quantity=SOME_NUMBER_VALUE&lang=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"X-API-KEY\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: |-
            HttpResponse<String> response = Unirest.get("https://mimeeqapi.com/get-product-info?shortCode=SOME_STRING_VALUE&quantity=SOME_NUMBER_VALUE&lang=SOME_STRING_VALUE")
              .header("X-API-KEY", "REPLACE_KEY_VALUE")
              .asString();
        - lang: JS
          source: |-
            const data = null;

            const xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://mimeeqapi.com/get-product-info?shortCode=SOME_STRING_VALUE&quantity=SOME_NUMBER_VALUE&lang=SOME_STRING_VALUE");
            xhr.setRequestHeader("X-API-KEY", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "mimeeqapi.com",
              "port": null,
              "path": "/get-product-info?shortCode=SOME_STRING_VALUE&quantity=SOME_NUMBER_VALUE&lang=SOME_STRING_VALUE",
              "headers": {
                "X-API-KEY": "REPLACE_KEY_VALUE"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Php
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, [
              CURLOPT_URL => "https://mimeeqapi.com/get-product-info?shortCode=SOME_STRING_VALUE&quantity=SOME_NUMBER_VALUE&lang=SOME_STRING_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => [
                "X-API-KEY: REPLACE_KEY_VALUE"
              ],
            ]);

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("mimeeqapi.com")

            headers = { 'X-API-KEY': "REPLACE_KEY_VALUE" }

            conn.request("GET", "/get-product-info?shortCode=SOME_STRING_VALUE&quantity=SOME_NUMBER_VALUE&lang=SOME_STRING_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Ruby
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://mimeeqapi.com/get-product-info?shortCode=SOME_STRING_VALUE&quantity=SOME_NUMBER_VALUE&lang=SOME_STRING_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["X-API-KEY"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Curl
          source: |-
            curl --request GET \
              --url 'https://mimeeqapi.com/get-product-info?shortCode=SOME_STRING_VALUE&quantity=SOME_NUMBER_VALUE&lang=SOME_STRING_VALUE' \
              --header 'X-API-KEY: REPLACE_KEY_VALUE'
  /get-products-general-info:
    get:
      tags:
        - Product
      summary: Get the list of products
      description: Returns general information about all products defined for given customer
      operationId: getProductsGeneralInfo
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductGeneralInfo'
        '401':
          description: Unauthorized.
          content: { }
        '403':
          description: Authentication failed.
          content: { }
        '500':
          description: Internal server error.
          content: { }
      x-codeSamples:
        - lang: C
          source: |-
            CURL *hnd = curl_easy_init();

            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");
            curl_easy_setopt(hnd, CURLOPT_URL, "https://mimeeqapi.com/get-products-general-info");

            struct curl_slist *headers = NULL;
            headers = curl_slist_append(headers, "X-API-KEY: REPLACE_KEY_VALUE");
            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);

            CURLcode ret = curl_easy_perform(hnd);
        - lang: C#
          source: |-
            var client = new RestClient("https://mimeeqapi.com/get-products-general-info");
            var request = new RestRequest(Method.GET);
            request.AddHeader("X-API-KEY", "REPLACE_KEY_VALUE");
            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://mimeeqapi.com/get-products-general-info\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"X-API-KEY\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: |-
            HttpResponse<String> response = Unirest.get("https://mimeeqapi.com/get-products-general-info")
              .header("X-API-KEY", "REPLACE_KEY_VALUE")
              .asString();
        - lang: JS
          source: |-
            const data = null;

            const xhr = new XMLHttpRequest();
            xhr.withCredentials = true;

            xhr.addEventListener("readystatechange", function () {
              if (this.readyState === this.DONE) {
                console.log(this.responseText);
              }
            });

            xhr.open("GET", "https://mimeeqapi.com/get-products-general-info");
            xhr.setRequestHeader("X-API-KEY", "REPLACE_KEY_VALUE");

            xhr.send(data);
        - lang: Node
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "mimeeqapi.com",
              "port": null,
              "path": "/get-products-general-info",
              "headers": {
                "X-API-KEY": "REPLACE_KEY_VALUE"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Php
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, [
              CURLOPT_URL => "https://mimeeqapi.com/get-products-general-info",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => [
                "X-API-KEY: REPLACE_KEY_VALUE"
              ],
            ]);

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("mimeeqapi.com")

            headers = { 'X-API-KEY': "REPLACE_KEY_VALUE" }

            conn.request("GET", "/get-products-general-info", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Ruby
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://mimeeqapi.com/get-products-general-info")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["X-API-KEY"] = 'REPLACE_KEY_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: Curl
          source: |-
            curl --request GET \
              --url https://mimeeqapi.com/get-products-general-info \
              --header 'X-API-KEY: REPLACE_KEY_VALUE'
